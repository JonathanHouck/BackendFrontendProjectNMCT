//Deze module aangepast naar eigen wens: https://www.npmjs.com/package/angular-scroll-animate
(function () {
    'use strict';

    angular.module('angular-scroll-animate', []).directive('whenVisible', ['$document', '$window',
        function($document, $window) {

            var determineWhereElementIsInViewport =
                function($el, viewportHeight, whenVisibleFn, delayPercent, scope) {

                    var elementBounds = $el[0].getBoundingClientRect();

                    //var panelTop = elementBounds.top;
                    var panelBottom = elementBounds.bottom;

                    // pixel buffer until deciding to show the element
                    var delayPx = delayPercent * elementBounds.height;

                    var bottomVisible = (panelBottom - delayPx > 0) && (panelBottom < viewportHeight);
                    //var topVisible = (panelTop + delayPx <= viewportHeight) && (panelTop > 0);

                    if ($el.data('hidden') && bottomVisible) {
                        whenVisibleFn($el, scope);
                        $el.data('hidden', false);
                    }

                    /*// scrolled out from scrolling down or up
                     else if (!($el.data('hidden')) && (panelBottom < 0 || panelTop > viewportHeight)) {
                     whenNotVisibleFn($el, scope);
                     $el.data('hidden', true);
                     }*/
                };

            return {
                restrict: 'A',
                scope: {
                    whenVisible: '&',
                    delayPercent: '=?'
                },

                controller: ['$scope', function(scope) {
                    if (!scope.whenVisible || !angular.isFunction(scope.whenVisible())) {
                        throw new Error('Directive: angular-scroll-animate \'when-visible\' attribute must specify a function.');
                    }

                    /*if (scope.whenNotVisible && !angular.isFunction(scope.whenNotVisible())) {
                     throw new Error('Directive: angular-scroll-animate \'when-not-visible\' attribute must specify a function.');
                     }*/

                    if (scope.delayPercent) {

                        var delayPercent = parseFloat(scope.delayPercent);

                        if ((Number.isNaN(delayPercent)) || (delayPercent < 0 || delayPercent > 1)) {
                            throw new Error('Directive: angular-scroll-animate \'delay-percent\' attribute must be a decimal fraction between 0 and 1.');
                        }
                    }
                }],

                link: function(scope, el, attributes) {

                    var delayPercent = attributes.delayPercent || 0.25; // lower = more eager to hide / show, higher = less eager

                    var onScroll = function() {

                        var document = $document[0].documentElement;
                        var viewportHeight = document.clientHeight;

                        determineWhereElementIsInViewport(el, viewportHeight,
                            scope.whenVisible(), delayPercent, scope);
                    };

                    var unbindDocumentEvents = $document.on('scroll', onScroll);
                    var unbindWindowEvents = angular.element($window).on('resize orientationchange', onScroll);

                    /*scope.$on('$destroy', unbindDocumentEvents);
                     scope.$on('$destroy', unbindWindowEvents);*/

                    // initialise
                    el.data('hidden', true);
                    scope.$evalAsync(onScroll);
                }
            };
        }]);

}());
(function () {
    'use strict';
    angular.module('swoppr', [
        'ngRoute',
        'ngMessages',
        'ngAnimate',
        'angular-scroll-animate',
        'ui.bootstrap',
        'httpFactory',
        'angular-growl',
        'ngFileUpload'
    ])
    .
    config(['$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {
        $routeProvider.
        when('/', {
            templateUrl: 'partials/index',
            controller: 'IndexCtrl'
        }).
        when('/toRent', {
            templateUrl: 'partials/toRent',
            controller: '',
            auth: true
        }).
        when('/chat/:id?', {
            templateUrl: 'partials/chat',
            controller: 'ChatioCtrl'
        }).
        when('/fileUpload', {
            templateUrl: 'partials/fileUpload',
            controller: "FileUploadCtrl"
        }).
        when('/placeArticle', {
            templateUrl: 'partials/placeArticle',
            controller: 'PlaceArticleCtrl'
        }).
        when('/login', {
            templateUrl: 'partials/login',
            controller: 'LoginCtrl'
        }).
        when('/register', {
            templateUrl: 'partials/register',
            controller: 'RegisterCtrl'
        }).
        when('/profile', {
            templateUrl: '/partials/profile',
            controller: 'ProfileCtrl'
        }).
        otherwise({
            redirectTo: '/'
        });
        $locationProvider.html5Mode(true);
    }])
    .
    run(function($rootScope, $location, $http, $route) {
        $rootScope.$on( "$routeChangeStart", function(next) {

            //userdata ophalen voor navbar

            if (!$rootScope.user) {
                $http.get('/api/user/userDataNavbar')
                    .success(function(data) {
                        $rootScope.user = data;
                    });
            }

            var nextPath = $location.path();
            var nextRoute = $route.routes[nextPath];

            if (nextRoute) {
                //als pagina geauthorizeerd moet zijn en er geen user ingelogd is --> naar loginpagina
                if (nextRoute.auth && $rootScope.user == "error") {
                    $location.path("/login");
                }
            }
        });
    });
}());
/**
 * Created by jonah on 11/14/2015.
 */
(function () {
    'use strict';

    angular.module('swoppr')
        .controller('CarouselCtrl', CarouselCtrl);

    function CarouselCtrl($scope) {
        //$scope.myInterval = 5000;
        $scope.noWrapSlides = true;
        var slides = $scope.slides = [];

        slides.push({
            image: 'images/geldVerdienen.png',
            text: 'Iets nodig maar wil je niet teveel geld uitgeven?'
        });

        slides.push({
            image: 'images/ongebruikteGoederen.png',
            text: "Veel geld uitgegeven maar gebruikt het zelden?"
        });
    }
}());


/**
 * Created by jonah on 12/1/2015.
 */
(function () {
    'use strict';
    angular.module('swoppr')
        .controller('ChatioCtrl', ['$rootScope', '$scope', '$http', '$routeParams', ChatioCtrl]);

    function ChatioCtrl($rootScope, $scope, $http, $routeParams) {
        $scope.rentid = $routeParams.id;

        $scope.messages = [];

        var name = "";
        if ($rootScope.user) {
            name = $rootScope.user.firstname + $rootScope.user.surname;
        }
        $scope.newMessage = createBlankMessage(name);

        //alle messages ophalen van het id in de url
        $http.get("/api/chat/" + $scope.rentid).then(function (result) {
            $scope.messages = result.data;
        }, function(err) {
            alert(err);
        });

        var socket = io.connect();

        socket.emit("join renting", $scope.rentid);

        socket.on("broadcast message", function(message) {
            $scope.messages.push(message);
            $scope.$apply();
        });

        //message saven aan de bijhorende renting
        $scope.save = function() {
            $http.post('/api/chat/' + $scope.rentid, $scope.newMessage).then(function(result) {
                $scope.messages.push(result.data);
                $scope.newNote = createBlankMessage(name);
                socket.emit("newMessage", {rentid: $scope.rentid, message: result.data});
            }, function(err) {
                alert(err);
            });
        };
    }
}());

function createBlankMessage(name) {
    return {
        content: "",
        name: name
    };
}
/**
 * Created by jonah on 12/4/2015.
 */

(function () {
    'use strict';
    angular.module('swoppr')
        .controller('FileUploadCtrl', ['$rootScope', '$scope', 'Upload', FileUploadCtrl]);

    function FileUploadCtrl ($rootScope, $scope, Upload) {
        $scope.uploadFile = function(file) {
            file.upload = Upload.upload({
                url: '/api/fileUpload',
                file: file,
                data: {
                    userId: $rootScope.user._id,
                    productName: $scope.productName
                    }
            });
        };
    }
}());
/**
 * Created by jonah on 11/14/2015.
 */
(function () {
    'use strict';
    angular.module('swoppr')
        .controller('IndexCtrl', IndexCtrl);

    function IndexCtrl ($scope) {
        $scope.fadeIn = function ($el) {
            animate($el, "fadeIn");
        };

        $scope.fadeInUp = function ($el) {
            animate($el, "fadeInUp");
        };

        $scope.fadeInLeft = function ($el) {
            animate($el, "fadeInLeft");
        };

        $scope.fadeInRight = function ($el) {
            animate($el, "fadeInRight");
        };

        $scope.zoomIn = function ($el) {
            animate($el, "zoomIn");
        };
    }
}());

function animate($el, animation) {
    $el.removeClass('hide-for-animation');
    $el.addClass('animated ' + animation);
}
/**
 * Created by jonah on 11/21/2015.
 */
(function () {
    'use strict';
    angular.module('swoppr')
        .controller('LoginCtrl', ['$rootScope', '$scope', '$http', LoginCtrl]);

    function LoginCtrl ($rootScope, $scope, $http) {
        $scope.login = function() {
            $http
                .post('/partials/login', {
                    email: this.email,
                    password: this.password
                })
                .success(function(data) {
                    $http.get('/api/user/userDataNavbar')
                        .success(function(data) {
                            $rootScope.user = data;
                    });
                });
        };
    }
}());
/**
 * Created by jonah on 11/14/2015.
 */
(function () {
    'use strict';

    angular.module('swoppr')
        .controller('NavbarCtrl', ['$scope', '$location', NavbarCtrl]);

    function NavbarCtrl($scope, $location) {
        //https://jsfiddle.net/xv7tws10/5/
        $scope.isCollapsed = true;

        //http://stackoverflow.com/questions/12592472/how-to-highlight-a-current-menu-item
        $scope.getClass = function (path) {
            if ($location.path() === path) {
                return 'active';
            } else {
                return '';
            }
        };
    }
}());
/**
 * Created by Greg on 04-Dec-15.
 */
(function () {
    'use strict';
    angular.module('swoppr')
        .controller('PlaceArticleCtrl', ['$scope', 'ProductService', 'RentingService', 'UserService', PlaceArticleCtrl])

    function PlaceArticleCtrl ($scope, ProductService, RentingService, UserService) {
        var productId = "5661cae440d7dfb819343c88";
        var productToDeleteId = "5661e0a474c36f0c277234cb";
        var idUser = "5661b52d37012fe41ebdaa05";
        var rentingId = "";

        //Products
        $scope.ProductsAll = ProductService.all();
        $scope.ProductsById = ProductService.byId(productId);
        $scope.ProductsByIdUser = ProductService.byIdUser(productId);
        //var newProduct = new Product("test", 5, "description", Date.now());
        //ProductService.add(userId, newProduct);
        //ProductService.remove(productToDeleteId);


        //Users
        $scope.UsersAll = UserService.all();
        $scope.UserById = UserService.byId(idUser);
        $scope.UsersAllWithProducts = UserService.AllWithProducts();

        //add niet nodig?
        //var u = new User("Den Boss", "Jos","josdenboss@hotmail.com", null, Date.now());
        //UserService.add(u);




        //Rentings

    }
}());
/**
 * Created by jonah on 11/21/2015.
 */
(function () {
    'use strict';
    angular.module('swoppr')
        .controller('ProfileCtrl', ['$scope', '$http', ProfileCtrl]);

    function ProfileCtrl ($scope, $http) {
        $http.get('/api/user/userData')
            .success(function(data) {
                $scope.user = data; //Expose the user data to your angular scope
        });
    }
}());
/**
 * Created by jonah on 11/21/2015.
 */
(function () {
    'use strict';
    angular.module('swoppr')
        .controller('RegisterCtrl', ['$rootScope', '$scope', '$http', RegisterCtrl]);

    function RegisterCtrl ($rootScope, $scope, $http) {
        $scope.register = function() {

            $scope.formErrors = {};
            $http
                .post('/partials/register', {
                    firstname: this.firstname,
                    surname: this.surname,
                    email: this.email,
                    password: this.password
                })
                .success(function(data) {
                    $http.get('/api/user/userDataNavbar')
                        .success(function(data) {
                            $rootScope.user = data;
                    });
                });
        };
    }
}());
/**
 * Created by jonah on 11/28/2015.
 */
(function () {
    'use strict';
    angular.module('swoppr')
        .directive('compareTo', compareToDir);

    function compareToDir () {
        return {
            require: "ngModel",
            scope: {
                otherModelValue: "=compareTo"
            },
            link: function(scope, element, attributes, ngModel) {

                ngModel.$validators.compareTo = function(modelValue) {
                    return modelValue == scope.otherModelValue;
                };
                scope.$watch("otherModelValue", function() {
                    ngModel.$validate();
                });
            }
        };
    }
}());
/**
 * Created by jonah on 11/21/2015.
 */
(function () {
    'use strict';
    angular.module('swoppr')
        .directive('logout', ['$rootScope', '$http', logoutDir]);

    function logoutDir ($rootScope, $http) {
        return {
            restrict: 'A',
            link: function(scope, element, attrs) {
                element.on('click', function(e) {
                    e.preventDefault();
                    $http.post('partials/logout')
                        .success(function(data) {
                            $rootScope.user = "";
                        });
                });
            }
        };
    }
}());
/**
 * Created by jonah on 11/21/2015.
 */
(function () {
    'use strict';
    angular.module('swoppr')
        .directive('redir', redirDir);

    function redirDir() {
        return {
            restrict: 'A',
            link: function(scope, element, attrs) {
                element.on('click', function(e) {
                    e.preventDefault();
                    window.location = attrs.href;
                });
            }
        };
    }
}());
/**
 * Created by Greg on 24-Nov-15.
 */
(function(){
    "use strict";
    var ProductService = function($http){

        var byId = function(id){
            var url =   '/api/product/getById/'+id;
            return $http.get(url).then(function(response) {
                var p = response.data;
                return new Product(
                    p.productName,
                    p.pricePerDay,
                    p.description,
                    p.createdOn
                );
            });
        };

        var byIdUser = function(userId){
            var url = '/api/product/getByIdUser/'+userId;
            return $http.get(url).then(function(response) {
                var user = new User();
                user.firstname = response.data.firstname;
                user.lastname = response.data.lastname;
                user.emailadres = response.data.local.email;

                var p = response.data.product;
                var product = new Product(
                    p.productName,
                    p.pricePerDay,
                    p.description,
                    p.createdOn
                );

                user.products = product;
                return user;
            });
        };

        var all = function(){
            var url =   '/api/product/getAll/';
            return $http.get(url).then(function(response) {
                var products = [];
                angular.forEach(response.data, function(p){
                    var product = new Product(
                        p.productName,
                        p.pricePerDay,
                        p.description,
                        p.createdOn
                    );

                    products.push(product);
                });
                return products;
            });
        };

        var add = function(userId, product){
            var url = '/api/product/newProduct/';
            product.userId = userId;
            $http.put(url, product).then(function(response){
                return response;
            });
        };

        var remove = function(id){
            var url =  '/api/product/removeProductUser/'+id;
            $http.get(url).then(function(response) {
                return response;
            });
        };

        var update = function(){
            var url =   '/api/product/editProductUser/';
            $http.post(url) .then(function(response) {
                return response; //Expose the user data to your angular scope
            });
        };

        return {
            byId : byId,
            byIdUser : byIdUser,
            all : all,
            add : add,
            remove : remove,
            update : update
        }
    };
    angular.module("swoppr").factory("ProductService", ["$http", ProductService]);
})();
/**
 * Created by Greg on 24-Nov-15.
 */
(function(){
    "use strict";

    var RentingService = function($http){

        var byId = function(id){
            var url =   '/api/renting/getById/'+id;
            return $http.get(url).then(function(response) {
                var rentings = [];
                angular.forEach(response.data, function(r){
                    var renting = new Renting(
                        r.renterFrom,
                        r.renterTo,
                        r.product,
                        r.daysToRent
                    );

                    rentings.push(renting);
                });
                return rentings;
            });
        };

        var byUser = function(userId){
            var url =   '/api/renting/getAllRentingsRenterFrom/'+userId;
            return $http.get(url).then(function(response) {
                var rentings = [];
                angular.forEach(response.data, function(r){
                    var renting = new Renting(
                        r.renterFrom,
                        r.renterTo,
                        r.product,
                        r.daysToRent
                    );

                    rentings.push(renting);
                });
                return rentings;
            });
        };

        var byRenter = function(userId){
            var url =   '/api/renting/getAllRentingsRenterTo/'+userId;
            return $http.get(url).then(function(response) {
                var rentings = [];
                angular.forEach(response.data, function(r){
                    var renting = new Renting(
                        r.renterFrom,
                        r.renterTo,
                        r.product,
                        r.daysToRent
                    );

                    rentings.push(renting);
                });
                return rentings;
            });
        };

        var byProduct = function(){
            var url =   '/api/renting/getAllRentingsProduct/';
            return $http.get(url).then(function(response) {
                var rentings = [];
                angular.forEach(response.data, function(r){
                    var renting = new Renting(
                        r.renterFrom,
                        r.renterTo,
                        r.product,
                        r.daysToRent
                    );

                    rentings.push(renting);
                });
                return rentings;
            });
        };

        var add = function(renting){
            var url =   '/api/renting/newRenting/';
            $http.post(url, renting).then(function(response) {
                return response; //Expose the user data to your angular scope
            });
        };

        //var remove = function(){
        //    var url =   '/api/renting/getById/'+id;
        //    $http.get(url)
        //        .then(function(response) {
        //            return response; //Expose the user data to your angular scope
        //        });
        //};
        //
        //
        //var update = function(){
        //    var url =   '/api/renting/getById/'+id;
        //    $http.get(url)
        //        .then(function(response) {
        //            return response; //Expose the user data to your angular scope
        //        });
        //};

        return {
            byId : byId,
            byUser : byUser,
            byRenter : byRenter,
            byProduct : byProduct,
            add : add
            //remove : remove,
            //update : update
        }
    };
    angular.module("swoppr").factory("RentingService", ["$http", RentingService]);
})();


/**
 * Created by Greg on 24-Nov-15.
 */

(function(){
    "use strict";

    var UserService = function($http){

        var byId = function(id){
            var url =   '/api/user/getById/'+id;
            return $http.get(url)
                .then(function(response) {
                    var u = response.data;
                    return new User(
                        u.lastname,
                        u.firstname,
                        u.local.email,
                        u.products,
                        u.createdOn
                    );
                });
        };

        var AllWithProducts = function(){
            var url = '/api/user/getAllUsersWithProducts';
            return $http.get(url)
                .then(function(response) {
                    var users = [];
                    angular.forEach(response.data, function(u){
                        var user = new User(
                            u.lastname,
                            u.firstname,
                            u.local.email,
                            u.products,
                            u.createdOn
                        );
                        users.push(user);
                    });
                    return users;
                });
        };

        var all = function(){
            var url =   '/api/user/getAll/';
            return $http.get(url)
                .then(function(response) {
                    var users = [];
                    angular.forEach(response.data, function(u){
                        var user = new User(
                            u.lastname,
                            u.firstname,
                            u.local.email,
                            u.products,
                            u.createdOn
                        );
                        users.push(user);
                    });
                    return users;
                });
        };

        var add = function(user){
            var url =   '/api/user/newUser/';
            $http.post(url, user)
                .then(function(response) {
                    return response; //Expose the user data to your angular scope
                });
        };


        return {
            byId : byId,
            AllWithProducts : AllWithProducts,
            add : add,
            all : all
        };
    };
    angular.module("swoppr").factory("UserService", ["$http", UserService]);
})();
/**
 * Created by Greg on 04-Dec-15.
 */
function Product(productName, pricePerDay, description, createdOn){
    this.productName = productName;
    this.pricePerDay = pricePerDay;
    this.description = description;
    this.createdOn = createdOn;
}

Product.prototype.toString = function(){
    return this.productName;
};
/**
 * Created by Greg on 04-Dec-15.
 */
function Renting(lastname, firstname,emailadres, daysToRent){
    this.renterFrom = lastname;
    this.renterTo = firstname;
    this.product = emailadres;
    this.daysToRent = daysToRent;
}

Renting.prototype.toString = function(){
    return this.renterFrom;
};

/**
 * Created by Greg on 04-Dec-15.
 */
function User(lastname, firstname,emailadres, products, createdOn){
    this.lastname = lastname;
    this.firstname = firstname;
    this.emailadres = emailadres;
    this.products = products;
    this.createdOn = createdOn;
}

User.prototype.toString = function(){
    return this.firstname + " " + this.lastname;
};
